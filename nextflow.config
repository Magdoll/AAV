manifest {
  name            = 'laava'
  author          = 'formbio'
  homePage        = 'https://github.com/formbio/AAV'
  description     = 'Long-read AAV Analysis'
  mainScript      = 'main.nf'
  nextflowVersion = '>=23.04.2'
  version         = 'v2.5.0'
}

params {
  // Workflow inputs
  seq_reads = null
  vector_bed = null
  vector_fa = null
  helper_fa = null
  repcap_fa = null
  host_fa = null
  flipflop_name = ''

  // Required for Form Bio workflows
  output = 'output'

  // For testing
  citest=false

  // Container management
  containerCloudProject = 'formbio'
  containerRepo = 'laava'
  containerRegistry = "ghcr.io/${params.containerCloudProject}/${params.containerRepo}:latest"
}

// Execution environments

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')

docker {
  runOptions = "--gpus all"
  enabled = true
  userEmulation = true
}

executor {
  queueSize=50
  name='google-lifesciences'
  submitRateLimit='10sec'
  pollInterval='30 sec'
}

google {
  region = 'us-central1'
  //cloudprj='xx-sbx'
  //project = "${params.cloudprj}"

  batch.bootDiskSize='100.GB'
  batch.debug = true
  batch.sshDaemon = true

  lifeSciences.bootDiskSize='100.GB'
  lifeSciences.debug = true
  lifeSciences.sshDaemon = true
}

process {
  executor = 'google-lifesciences' //'google-batch'
  maxRetries = 3
  maxErrors = '-1'
  maxForks = 50
  cache = 'lenient'
  // Only has effect on cloud
  machineType = 'e2-highmem-8'
  disk = '500 GB'
}

profiles {
  // For Local nextflow development
  local {
    process.executor = 'local'
    workDir = 'workflow-outputs/work'
    params.output='workflow-outputs/output'
    params.containerRegistry="${params.containerRepo}"
    process.queue=10
    docker.enabled = true
    docker.runOptions=""
    docker.userEmulation = true
    trace {
        enabled = true
        overwrite = true
        file = 'nextflow_logs/pipeline_trace.txt'
        field = 'task_id,native_id,process,name,status,exit,submit,start,complete,duration,realtime'
    }

    timeline {
        enabled = true
        overwrite = true
        file = 'workflow-outputs/nextflow_logs/timeline.html'
    }

    report {
        enabled = true
        overwrite = true
        file = 'workflow-outputs/nextflow_logs/report.html'
    }
    dag {
        enabled = true
        overwrite = true
        file = "workflow-outputs/nextflow_logs/pipeline_dag_${trace_timestamp}.svg"
    }
  }

  googlebatch {
    process{
      executor = 'google-batch'
    }
  }

  googlelifesciences {
    process{
      executor = 'google-lifesciences'
    }
  }
}
