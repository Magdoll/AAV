def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')

docker {
  runOptions = "--gpus all"
  enabled = true
  userEmulation = true
}

params {
 citest=false
 cloudprj='xx-sbx'
 containerCloudProject = 'formbio'
 containerRepo = 'laava_nf'
 containerRegistry = "ghcr.io/${params.containerCloudProject}/${params.containerRepo}:latest"
 output='output'
}

google {
  region = 'us-central1'
  project = "${params.cloudprj}"
  lifeSciences.debug = true
  lifeSciences.sshDaemon = true

  batch.debug = true
  batch.sshDaemon = true
}

executor {
  queueSize=50
  name='google-lifesciences'
  submitRateLimit='10sec'
  pollInterval='30 sec'
}

process {
  executor = 'google-lifesciences' //'google-batch'
  maxRetries = 3
  maxErrors = '-1'
  maxForks = 50
  cache = 'lenient'
}


google {
  batch.bootDiskSize='100.GB'
  lifeSciences.bootDiskSize='100.GB'
}

profiles {
  // For Local nextflow development
  local {
    process.executor = 'local'
    workDir = 'workflow-outputs/work'
    params.output='workflow-outputs/output'
    params.containerRegistry="${params.containerRepo}"
    process.queue=10
    docker.enabled = true
    docker.runOptions=""
    docker.userEmulation = true
    trace {
        enabled = true
        overwrite = true
        file = 'nextflow_logs/pipeline_trace.txt'
        field = 'task_id,native_id,process,name,status,exit,submit,start,complete,duration,realtime'
    }

    timeline {
        enabled = true
        overwrite = true
        file = 'workflow-outputs/nextflow_logs/timeline.html'
    }

    report {
        enabled = true
        overwrite = true
        file = 'workflow-outputs/nextflow_logs/report.html'
    }
    dag {
        enabled = true
        overwrite = true
        file = "workflow-outputs/nextflow_logs/pipeline_dag_${trace_timestamp}.svg"
    }
  }

  googlebatch {
    process{
      executor = 'google-batch'
    }
  }

  googlelifesciences {
    process{
      executor = 'google-lifesciences'
    }
  }
}
